// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentAPI.Persistance;

namespace StudentAPI.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20200508030216_CreateExams+ExamTables")]
    partial class CreateExamsExamTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentAPI.Core.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("ExamTableId");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasAlternateKey("ExamTableId", "Date", "Time");

                    b.HasIndex("ModuleId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("StudentAPI.Core.Models.ExamTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassNbr")
                        .HasMaxLength(2);

                    b.Property<string>("Cycle")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("SchoolYear")
                        .HasMaxLength(20);

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ExamTables");
                });

            modelBuilder.Entity("StudentAPI.Core.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbvNom")
                        .HasMaxLength(10);

                    b.Property<int>("Coefficient");

                    b.Property<int>("Credit");

                    b.Property<string>("Cycle")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Unite")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("StudentAPI.Core.Models.Seance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Location")
                        .HasMaxLength(50);

                    b.Property<int>("ModuleId");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("TimeTableId");

                    b.Property<string>("Type")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasAlternateKey("TimeTableId", "Day", "Time");

                    b.HasIndex("ModuleId");

                    b.ToTable("Seances");
                });

            modelBuilder.Entity("StudentAPI.Core.Models.TimeTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassNbr")
                        .HasMaxLength(2);

                    b.Property<string>("Cycle")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("SchoolYear")
                        .HasMaxLength(20);

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TimeTables");
                });

            modelBuilder.Entity("StudentAPI.Core.Models.Exam", b =>
                {
                    b.HasOne("StudentAPI.Core.Models.ExamTable", "ExamTable")
                        .WithMany("Exams")
                        .HasForeignKey("ExamTableId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentAPI.Core.Models.Module", "Module")
                        .WithMany("Exams")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentAPI.Core.Models.Seance", b =>
                {
                    b.HasOne("StudentAPI.Core.Models.Module", "Module")
                        .WithMany("Seances")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentAPI.Core.Models.TimeTable", "TimeTable")
                        .WithMany("Seances")
                        .HasForeignKey("TimeTableId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
